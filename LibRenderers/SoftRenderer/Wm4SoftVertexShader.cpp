// Geometric Tools, Inc.
// http://www.geometrictools.com
// Copyright (c) 1998-2006.  All Rights Reserved
//
// The Wild Magic Version 4 Restricted Libraries source code is supplied
// under the terms of the license agreement
//     http://www.geometrictools.com/License/Wm4RestrictedLicense.pdf
// and may not be copied or disclosed except in accordance with the terms
// of that agreement.

#include "Wm4SoftRendererPCH.h"
#include "Wm4SoftRenderer.h"
#include "Wm4SoftResources.h"
using namespace Wm4;

//----------------------------------------------------------------------------
void SoftRenderer::ApplyVertexShader ()
{
    // Resize the output array, if necessary.
    int iVQuantity = m_pkVBResource->VQuantity;
    int iRequestedChannels = m_iNumOutputChannels*iVQuantity;
    m_kOutputVertex.EnsureCapacity(iRequestedChannels);

    const float* afInVertex = m_pkVBResource->IVertex;
    const float* afRegister = m_kVRegister.GetData();
    float* afOutVertex = m_kOutputVertex.GetData();
    for (int i = 0; i < iVQuantity; i++)
    {
        // The hardware-based shaders store text strings for the vertex
        // program, which are passed to the hardware via OpenGL or DirectX.
        // The software-based shaders have C implementations.
        m_oVProgram(afRegister,afInVertex,afOutVertex);

        afInVertex += m_iNumInputChannels;
        afOutVertex += m_iNumOutputChannels;
    }

    // This is the vertex index where points generated by clipping will be
    // stored in m_kOutputVertex.  The actual 'float' index is
    // m_iNumOutputChannels*m_iNextVertexIndex.
    m_iNextVertexIndex = iVQuantity;
}
//----------------------------------------------------------------------------
