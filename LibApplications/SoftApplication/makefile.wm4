CFLAGS := -c
ARFLAGS := rs
INCPATH := -I . -I TreeControl -I ./Wmsp -I ../../SDK/Include
INCDIR := ../../SDK/Include

ifeq (linux,$(findstring linux,$(SYS)))
CC := /usr/bin/g++
GCC := /usr/bin/gcc
EGL := XSoft
AR := /usr/bin/ar
INCPATH += -I /usr/X11R6/include
endif

ifeq (mingw,$(findstring mingw,$(SYS)))
CC := /mingw/bin/g++
GCC := /mingw/bin/gcc
EGL := WinSoft
AR := /mingw/bin/ar
CFLAGS += -DMINGW
INCPATH += -I /mingw/include
endif

ifeq (sgi,$(findstring sgi,$(SYS)))
CC := /usr/freeware/bin/g++
GCC := /usr/freeware/bin/gcc
EGL := XSoft
AR := /usr/bin/ar
INCPATH += -I /usr/X11R6/include
endif

ifeq (Debug,$(findstring Debug,$(CFG)))
CFLAGS += -g -D_DEBUG
else
CFLAGS += -O2 -DNDEBUG
endif

ifeq (Memory,$(findstring Memory,$(CFG)))
CFLAGS += -DWM4_MEMORY_MANAGER
endif

INC := Wm4ApplicationPCH.h Wm4Application.h Wm4ApplicationMCR.h \
       Wm4ConsoleApplication.h Wm4WindowApplication.inl \
       $(wildcard Wm4WindowApplication*.h)
SRC := Wm4Application.cpp Wm4ConsoleApplication.cpp \
       $(wildcard Wm4WindowApplication*.cpp) Wm4$(EGL)Application.cpp
ifeq (mingw,$(findstring mingw,$(SYS)))
SRC += TreeControl.cpp
endif
OBJ := $(SRC:%.cpp=$(CFG)/%.o)
LIB := ../../SDK/Library/$(CFG)/libWm4SoftApplication.a

build : $(OBJ)
	$(AR) $(ARFLAGS) $(LIB) $(OBJ)
	cp -fp $(INC) $(INCDIR) 

$(CFG)/TreeControl.o : TreeControl/TreeControl.cpp
	@mkdir -p $(CFG)
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(CFG)/%.o : %.cpp
	@mkdir -p $(CFG)
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

clean :
	rm -f $(LIB)
	rm -f $(CFG)/*.o

